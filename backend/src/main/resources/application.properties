# Database Configuration (H2 for Development)
spring.datasource.url=jdbc:h2:mem:church_app
spring.datasource.username=sa
spring.datasource.password=password
spring.datasource.driver-class-name=org.h2.Driver
spring.h2.console.enabled=true

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Server Configuration
server.port=${SERVER_PORT:8081}
server.servlet.context-path=/api

# JWT Configuration
jwt.secret=your-super-secret-jwt-key-change-this-in-production-use-at-least-256-bits
jwt.expiration=86400000

# Google OAuth2 Configuration
# TODO: Replace with your actual Google OAuth credentials from Google Cloud Console
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8081/api/oauth2/callback/google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# CORS Configuration
cors.allowed-origins=http://localhost:3000,http://localhost:3001,http://localhost:8100,capacitor://localhost,http://localhost
cors.allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# AWS S3 Configuration (replace with your actual credentials)
aws.access-key-id=your-aws-access-key-id
aws.secret-access-key=your-aws-secret-access-key
aws.region=us-east-1
aws.s3.bucket-name=church-app-uploads

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized